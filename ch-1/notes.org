#+TITLE: Chapter 1 Notes

* Exercises

*** Exercise 1.1: Run the factorial example. What happens to your program if you enter a negative number? Modify the example to avoid this problem
- See /factorial.lua/
- Negative number in the original program caused a stack overflow. I added in extra if statements to account for if the number was negative

*** Exercise 1.2: Run the /twice/ example, both by loading the file with the -l option and with /dofile/. Which way do you prefer?
- See /lib1.lua/
- -l feels smart if there's a set, near-unchanging library you know you're going to always need, but /dofile/ feels much more flexible.

*** Exercise 1.3: Can you name other languages that use "--" for comments?
- Had to look this up, Ada and mySQL both use two dashes for comments.

*** Exercise 1.4: Which of the following strings are valid identifiers? ___ | _end | End | end | until? | nil | NULL | one-step
- ___, _end, End, and NULL are valid. "end" is reserved, "?" isn't valid, "nil" is reserved, and "-" isn't valid.

*** Exercise 1.5: What is the value of the expression /type(nil)==nil/? (You can use Lua to check your answer). Can you explain this result?
- This evaluates to false because type(nil) returns the string "nil", not literally /nil/.

*** Exercise 1.6: How can you check whether a value is a Boolean value without using the function /type/?
- compare the variable directly to the Bools of /true/ or /false/

*** Exercise 1.7: Consider the following expression: /(x and y and (not z)) or ((not y) and x)/ Are the parenthesis necessary? Would you reccomend their use in the expression?
- I do believe the parenthesis are NOT necessary, but I'd use them for the sake of readablility.

*** Exercise 1.8: Write a simple script that prints it's own name without knowing it in advance/
- See /psychic.lua/
- It's a one liner: /print(arg[0])/
